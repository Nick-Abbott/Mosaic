package com.abbott.mosaic.build.plugin

import com.squareup.kotlinpoet.ClassName
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FunSpec
import com.squareup.kotlinpoet.TypeSpec
import org.gradle.api.DefaultTask
import org.gradle.api.file.ConfigurableFileCollection
import org.gradle.api.file.DirectoryProperty
import org.gradle.api.tasks.Classpath
import org.gradle.api.tasks.InputFiles
import org.gradle.api.tasks.OutputDirectory
import org.gradle.api.tasks.TaskAction

import java.util.jar.JarFile
import kotlin.collections.filter
import kotlin.sequences.forEach

abstract class MergeMosaicTileCatalogs : DefaultTask() {
  @get:InputFiles
  @get:Classpath
  abstract val compileClasspath: ConfigurableFileCollection

  @get:OutputDirectory
  abstract val outputDir: DirectoryProperty

  @TaskAction
  fun run() {
    val acc = linkedSetOf<ClassName>()

    compileClasspath.files.filter { it.extension == "jar" }.forEach { jar ->
      JarFile(jar).use { jf ->
        jf.getJarEntry("META-INF/mosaic-catalog.list")?.let { entry ->
          jf.getInputStream(entry).bufferedReader().useLines { lines ->
            lines
              .map(String::trim)
              .filter { it.isNotEmpty() && !it.startsWith("#") }
              .map { ClassName.bestGuess(it) }
              .forEach(acc::add)
          }
        }
      }
    }

    val pkg = "com.abbott.mosaic.generated"
    val typeName = "LibraryTileRegistry"

    val funSpec = FunSpec.builder("registerLibraryTiles")
      .addKdoc("Registers tiles discovered from imported Mosaic tile libraries")
      .addAnnotation(ClassName("kotlin.jvm", "JvmStatic"))
      .addParameter("into", ClassName("com.abbott.mosaic", "MosaicRegistry"))
      .apply {
        acc.forEach { clazz ->
          addStatement("into.register(%T::class) { mosaic -> %T(mosaic) }", clazz, clazz)
        }
      }
      .build()

    val objSpec = TypeSpec.objectBuilder(typeName)
      .addFunction(funSpec)
      .build()

    val fileSpec = FileSpec.builder(pkg, typeName)
      .addFileComment("Generated by MergeMosaicTileCatalogs task. Do not edit.")
      .addType(objSpec)
      .build()

    fileSpec.writeTo(outputDir.get().asFile)
  }
}
